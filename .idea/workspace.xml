<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="76e8b4a5-518b-4d45-8a2b-64dbf958178e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/cypress/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/build-manifest.json" beforeDir="false" afterPath="$PROJECT_DIR$/.next/build-manifest.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/react-loadable-manifest.json" beforeDir="false" afterPath="$PROJECT_DIR$/.next/react-loadable-manifest.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/server/middleware-build-manifest.js" beforeDir="false" afterPath="$PROJECT_DIR$/.next/server/middleware-build-manifest.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/server/middleware-react-loadable-manifest.js" beforeDir="false" afterPath="$PROJECT_DIR$/.next/server/middleware-react-loadable-manifest.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/server/pages-manifest.json" beforeDir="false" afterPath="$PROJECT_DIR$/.next/server/pages-manifest.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/static/chunks/webpack.js" beforeDir="false" afterPath="$PROJECT_DIR$/.next/static/chunks/webpack.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/static/development/_buildManifest.js" beforeDir="false" afterPath="$PROJECT_DIR$/.next/static/development/_buildManifest.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.next/trace" beforeDir="false" afterPath="$PROJECT_DIR$/.next/trace" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/store/call/call.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/store/call/call.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/jest.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/jest.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/next.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/next.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Chat/ChatContainer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Chat/ChatContainer.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Chat/ChatHeader.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Chat/ChatHeader.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Chat/MessageBar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Chat/MessageBar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Chatlist/ChatListHeader.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Chatlist/ChatListHeader.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/Main.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/Main.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/Avatar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/Avatar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/CapturePhoto.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/CapturePhoto.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/ContextMenu.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/ContextMenu.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/CustomAvatarMenu.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/CustomAvatarMenu.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/DropDown.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/DropDown.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/IncomingVideoCall.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/IncomingVideoCall.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/IncomingVoiceCall.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/IncomingVoiceCall.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/Input.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/Input.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/Popup.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/Popup.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UI/SignIn.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UI/SignIn.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/constants/constants.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/constants/constants.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/hooks/useAuth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/hooks/useAuth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/_app.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/_app.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/login.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/login.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/onboarding.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/onboarding.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/service/ApiRoutes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/ApiRoutes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/service/const.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/const.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/message/message.action.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/message/message.action.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/message/message.slice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/message/message.slice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/message/message.types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/message/message.types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/store.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/store.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/user/user.action.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/user/user.action.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/user/user.selector.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/user/user.selector.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/user/user.slice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/user/user.slice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/store/user/user.types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/user/user.types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2VL9HyDWgNtKIxHTt5muw3Grz8m" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "test",
    "last_opened_file_path": "/home/pavel/WebstormProjects/clones-react/whats-up/server",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/home/pavel/WebstormProjects/clones-react/whats-up/next-test/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettier.import.notification.dismissed": "true",
    "prettierjs.PrettierConfiguration.Package": "/home/pavel/WebstormProjects/clones-react/whats-up/next-test/node_modules/prettier",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "/home/pavel/WebstormProjects/clones-react/whats-up/next-test/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/cypress" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/utils" />
      <recent name="$PROJECT_DIR$/__tests__/components" />
      <recent name="$PROJECT_DIR$/__tests__" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.user.action.test.RegistrationNewUser new user">
    <configuration name="user.action.test.RegistrationNewUser new user" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/store/user/user.action.test.ts" />
      <test-names>
        <test-name value="user.action.test" />
        <test-name value="RegistrationNewUser new user" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="user.action.test.RegistrationNewUser user already have" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/store/user/user.action.test.ts" />
      <test-names>
        <test-name value="user.action.test" />
        <test-name value="RegistrationNewUser user already have" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="user.action.test.getAllUsers reject" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/store/user/user.action.test.ts" />
      <test-names>
        <test-name value="user.action.test" />
        <test-name value="getAllUsers reject" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="user.action.test.getAllUsers " type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/store/user/user.action.test.ts" />
      <test-names>
        <test-name value="user.action.test" />
        <test-name value="getAllUsers " />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="user.slice.test.extra RegistrationNewUser.rejected" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/store/user/user.slice.test.ts" />
      <test-names>
        <test-name value="user.slice.test" />
        <test-name value="extra RegistrationNewUser.rejected" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.user.action.test.RegistrationNewUser new user" />
        <item itemvalue="Jest.user.action.test.RegistrationNewUser user already have" />
        <item itemvalue="Jest.user.slice.test.extra RegistrationNewUser.rejected" />
        <item itemvalue="Jest.user.action.test.getAllUsers reject" />
        <item itemvalue="Jest.user.action.test.getAllUsers " />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="76e8b4a5-518b-4d45-8a2b-64dbf958178e" name="Changes" comment="" />
      <created>1694604409990</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1694604409990</updated>
      <workItem from="1694604411179" duration="1438000" />
      <workItem from="1694672185916" duration="7311000" />
      <workItem from="1694680847796" duration="3623000" />
      <workItem from="1694684486836" duration="9625000" />
      <workItem from="1694696979543" duration="640000" />
      <workItem from="1694771297269" duration="608000" />
      <workItem from="1694933985804" duration="16283000" />
      <workItem from="1695030469121" duration="13168000" />
      <workItem from="1695045382614" duration="150000" />
      <workItem from="1695109170116" duration="14511000" />
      <workItem from="1695279714112" duration="5048000" />
      <workItem from="1695286976060" duration="187000" />
      <workItem from="1695298156694" duration="1095000" />
      <workItem from="1695644424928" duration="6826000" />
      <workItem from="1695652122485" duration="1239000" />
      <workItem from="1695711749343" duration="13672000" />
      <workItem from="1695727643636" duration="8825000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>